{"ast":null,"code":"var _jsxFileName = \"/Users/tunny2406/Documents/VST/src/addto/AddToHomeScreen.js\";\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport './addToHomeScreen.scss';\nimport DEFAULT_CONFIGURATION from './addToHomeScreenConfiguration.json';\nexport default function AddToHomeScreen(props) {\n  const DEFAULT_PROMPT = {\n    title: 'Do you want to install this application on your homescreen?',\n    cancelMsg: 'Not now',\n    installMsg: 'Install',\n    guidanceCancelMsg: 'Close',\n    src: 'images/logos/default/StoreLogo.png'\n  };\n  const DEFAULT_SESSION = {\n    lastDisplayTime: 0,\n    // last time we displayed the message\n    returningVisitor: false,\n    // is this the first time you visit\n    displayCount: 0,\n    // number of times the message has been shown\n    optedOut: false,\n    // has the user opted out\n    added: false,\n    // has been actually added to the home screen\n    pageViews: 0\n  };\n  let configuration = buildConfiguration();\n  doLog(`final configuration: ${JSON.stringify(configuration)}`);\n  let session = {};\n  let platform = {};\n  let guidanceTargetUrls = [];\n  let isAthDialogShown = false;\n  let showNativePrompt = false;\n  let canPromptState;\n  let beforeInstallPromptEvent;\n  let autoHideTimer;\n  useEffect(initialize, []);\n\n  function initialize() {\n    if ('onbeforeinstallprompt' in window) {\n      doLog('add beforeinstallprompt listener');\n      window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n      showNativePrompt = true;\n    }\n\n    if ('onappinstalled' in window) {\n      window.addEventListener('appinstalled', function (evt) {\n        doLog('A2HS installed');\n        session.added = true;\n        updateSession();\n\n        if (configuration.onInstall) {\n          configuration.onInstall.call(this);\n        }\n      });\n    }\n\n    checkPlatform();\n    let sessionString = window.localStorage.getItem(configuration.appId);\n    session = sessionString ? JSON.parse(sessionString) : DEFAULT_SESSION;\n\n    if (session && session.added) {\n      // there is nothing to do if app was already added to home screen\n      return;\n    }\n\n    if ('serviceWorker' in navigator) {\n      let manifestElement = document.querySelector('[rel=\\'manifest\\']');\n\n      if (!manifestElement) {\n        doLog('no manifest file');\n        platform.isCompatible = false;\n      }\n\n      setTimeout(function () {\n        // we wait 1 sec until we execute this because sometimes the browser needs a little time to register the service worker\n        navigator.serviceWorker.getRegistration().then(afterServiceWorkerCheck);\n        buildGuidanceURLs(configuration.customPromptPlatformDependencies);\n      }, 1000);\n    } else {\n      afterServiceWorkerCheck({});\n    }\n  }\n\n  function buildConfiguration() {\n    let options = Object.assign({}, DEFAULT_CONFIGURATION, props);\n    options.customPromptContent = Object.assign({}, DEFAULT_CONFIGURATION.customPromptContent, props.customPromptContent);\n    options.customPromptElements = Object.assign({}, DEFAULT_CONFIGURATION.customPromptElements, props.customPromptElements);\n    options.customPromptPlatformDependencies = Object.assign({}, DEFAULT_CONFIGURATION.customPromptPlatformDependencies, props.customPromptPlatformDependencies);\n\n    for (let key in DEFAULT_CONFIGURATION.customPromptPlatformDependencies) {\n      if (DEFAULT_CONFIGURATION.customPromptPlatformDependencies.hasOwnProperty(key)) {\n        if (props.customPromptPlatformDependencies) {\n          options.customPromptPlatformDependencies[key] = Object.assign({}, DEFAULT_CONFIGURATION.customPromptPlatformDependencies[key], props.customPromptPlatformDependencies[key]);\n        } else {\n          options.customPromptPlatformDependencies[key] = DEFAULT_CONFIGURATION.customPromptPlatformDependencies[key];\n        }\n      }\n    }\n\n    return options;\n  }\n\n  function buildGuidanceURLs(prompts) {\n    for (let key in prompts) {\n      if (prompts.hasOwnProperty(key)) {\n        let target = prompts[key].targetUrl;\n        doLog('building guidance urls: ' + key + target ? '/' + target : '');\n\n        if (target) {\n          guidanceTargetUrls.push(target);\n        }\n      }\n    }\n  } // show hint images for browsers without native prompt\n\n  /*\n   * Currently:\n   *  iOS Safari\n   *  FireFox Android\n   *  Samsung Android\n   *  Opera Android\n   */\n\n\n  function showPlatformGuidance(skipNative) {\n    let target = getPlatform(skipNative);\n    doLog('showing platform guidance for: ' + target);\n    let athWrapper = document.querySelector(`.${configuration.customPromptElements.container}`);\n\n    if (athWrapper) {\n      if (autoHideTimer) {\n        clearTimeout(autoHideTimer);\n      }\n\n      if (!skipNative && target === 'native' && beforeInstallPromptEvent) {\n        closePrompt();\n        triggerNativePrompt();\n      } else {\n        let promptTarget = Object.assign({}, DEFAULT_PROMPT, configuration.customPromptContent, configuration.customPromptPlatformDependencies[target]);\n\n        if (promptTarget.targetUrl) {\n          document.location.replace(promptTarget.targetUrl);\n        } else {\n          if (promptTarget.images && promptTarget.images.length > 0) {\n            let promptDialogBannerBody = athWrapper.querySelector(`.${configuration.customPromptElements.banner}`);\n            let promptDialogGuidanceBody = athWrapper.querySelector(`.${configuration.customPromptElements.guidance}`);\n            let promptDialogGuidanceImageCell = athWrapper.querySelector(`.${configuration.customPromptElements.guidanceImageCell}`);\n            let promptDialogGuidanceCancelButton = athWrapper.querySelector(`.${configuration.customPromptElements.guidanceCancelButton}`);\n            promptDialogBannerBody.classList.add(configuration.hideClass);\n            promptDialogGuidanceBody.classList.add(configuration.showClass);\n\n            for (let index = 0; index < promptTarget.images.length; index++) {\n              let img = new Image();\n              img.src = promptTarget.images[index].src;\n              img.alt = promptTarget.images[index].alt;\n\n              if (promptTarget.images[index].classes) {\n                img.classList.add(...promptTarget.images[index].classes);\n              }\n\n              promptDialogGuidanceImageCell.appendChild(img);\n            }\n\n            if (promptDialogGuidanceCancelButton) {\n              promptDialogGuidanceCancelButton.addEventListener('click', cancelPrompt);\n              promptDialogGuidanceCancelButton.classList.remove(configuration.hideClass);\n              promptDialogGuidanceCancelButton.innerText = promptTarget.guidanceCancelMsg != null ? promptTarget.guidanceCancelMsg : promptTarget.action && promptTarget.action.guidanceCancel ? promptTarget.action.guidanceCancel : '';\n            }\n          }\n\n          if (!isVisible(athWrapper)) {\n            athWrapper.classList.add(...promptTarget.showClasses);\n            athWrapper.classList.remove(configuration.hideClass);\n          }\n\n          let hideAfter = configuration.lifespan >= 10 ? configuration.lifespan : 10;\n          autoHideTimer = setTimeout(autoHide, hideAfter * 1000);\n        }\n      }\n    }\n  }\n\n  function isVisible(element) {\n    let dimensions = element.getBoundingClientRect();\n    return dimensions.width !== 0 && dimensions.height !== 0;\n  }\n\n  function afterServiceWorkerCheck(serviceWorker) {\n    if (!serviceWorker) {\n      doLog('no service worker');\n      platform.isCompatible = false;\n    }\n\n    doLog('service worker found - increasing page views');\n    session.pageViews += 1;\n    updateSession(); // override defaults that are dependent on each other\n\n    if (configuration && configuration.debug && typeof configuration.activateLogging === 'undefined') {\n      configuration.activateLogging = true;\n    } // setup the debug environment\n\n\n    if (configuration.debug) {\n      platform.isCompatible = true;\n    }\n\n    if (configuration.onInit) {\n      configuration.onInit.call(this);\n    }\n\n    doLog('decide to show: autoStart: ' + configuration.startAutomatically + ' ### beforeInstallPromptEvent: ' + beforeInstallPromptEvent + ' ### showNativePrompt: ' + showNativePrompt);\n\n    if (configuration.startAutomatically && !!beforeInstallPromptEvent) {\n      doLog('autoStart - displaying call-out');\n      show();\n    } else if (!showNativePrompt) {\n      doLog('not showing native prompt - displaying call-out');\n      show();\n    } else {\n      doLog('did decide to show nothing');\n    }\n  }\n\n  function doLog(logString) {\n    if (configuration.activateLogging) {\n      console.log('Add to Homescreen: ' + logString);\n    }\n  }\n\n  function updateSession() {\n    window.localStorage.setItem(configuration.appId, JSON.stringify(session));\n  }\n\n  function checkPlatform() {\n    // browser info and capability\n    let userAgent = window.navigator.userAgent;\n    doLog('checking platform - found user agent: ' + userAgent);\n    platform.isIDevice = /iphone|ipod|ipad/i.test(userAgent);\n    platform.isSamsung = /Samsung/i.test(userAgent);\n    platform.isFireFox = /Firefox/i.test(userAgent);\n    platform.isOpera = /opr/i.test(userAgent);\n    platform.isEdge = /edg/i.test(userAgent); // Opera & FireFox only Trigger on Android\n\n    if (platform.isFireFox) {\n      platform.isFireFox = /android/i.test(userAgent);\n    }\n\n    if (platform.isOpera) {\n      platform.isOpera = /android/i.test(userAgent);\n    }\n\n    platform.isChromium = 'onbeforeinstallprompt' in window;\n    platform.isInWebAppiOS = window.navigator.standalone === true;\n    platform.isInWebAppChrome = window.matchMedia('(display-mode: standalone)').matches;\n    platform.isMobileSafari = platform.isIDevice && userAgent.indexOf('Safari') > -1 && userAgent.indexOf('CriOS') < 0;\n    platform.isStandalone = platform.isInWebAppiOS || platform.isInWebAppChrome;\n    platform.isiPad = platform.isMobileSafari && userAgent.indexOf('iPad') > -1;\n    platform.isiPhone = platform.isMobileSafari && userAgent.indexOf('iPad') === -1;\n    platform.isCompatible = platform.isChromium || platform.isMobileSafari || platform.isSamsung || platform.isFireFox || platform.isOpera;\n  }\n\n  function getPlatform(native) {\n    if (configuration.debug && typeof configuration.debug === 'string') {\n      return configuration.debug;\n    }\n\n    if (platform.isChromium && native === undefined) {\n      return 'native';\n    } else if (platform.isFireFox) {\n      return 'firefox';\n    } else if (platform.isiPad) {\n      return 'ipad';\n    } else if (platform.isiPhone) {\n      return 'iphone';\n    } else if (platform.isOpera) {\n      return 'opera';\n    } else if (platform.isSamsung) {\n      return 'samsung';\n    } else if (platform.isEdge) {\n      return 'edge';\n    } else if (platform.isChromium) {\n      return 'chromium';\n    } else {\n      return '';\n    }\n  }\n\n  function handleBeforeInstallPrompt(event) {\n    event.preventDefault();\n    doLog('capturing the native A2HS prompt');\n    beforeInstallPromptEvent = event;\n    delayedShow();\n  }\n\n  function delayedShow() {\n    setTimeout(performShow, configuration.startDelay * 1000 + 500);\n  }\n\n  function show() {\n    // message already on screen\n    if (isAthDialogShown) {\n      doLog('not displaying call-out because already shown on screen');\n      return;\n    }\n\n    isAthDialogShown = true;\n\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      delayedShow();\n    } else {\n      document.onreadystatechange = function () {\n        if (document.readyState === 'complete') {\n          delayedShow();\n        }\n      };\n    }\n  }\n\n  function performShow() {\n    if (canPrompt()) {\n      if (beforeInstallPromptEvent && !configuration.mustShowCustomPrompt) {\n        doLog('show native prompt');\n        triggerNativePrompt();\n      } else {\n        let target = getPlatform();\n        let athWrapper = document.querySelector(`.${configuration.customPromptElements.container}`);\n        doLog(`show generic prompt for platform ${target}`);\n\n        if (athWrapper && !session.optedOut) {\n          athWrapper.classList.remove(configuration.hideClass);\n          let promptTarget = Object.assign({}, DEFAULT_PROMPT, configuration.customPromptContent, configuration.customPromptPlatformDependencies[target]);\n\n          if (promptTarget.showClasses) {\n            promptTarget.showClasses = promptTarget.showClasses.concat(configuration.showClasses);\n          } else {\n            promptTarget.showClasses = configuration.showClasses;\n          }\n\n          for (let index = 0; index < promptTarget.showClasses.length; index++) {\n            athWrapper.classList.add(promptTarget.showClasses[index]);\n          }\n\n          let promptDialogTitle = athWrapper.querySelector(`.${configuration.customPromptElements.title}`);\n          let promptDialogLogo = athWrapper.querySelector(`.${configuration.customPromptElements.logo}`);\n          let promptDialogCancelButton = athWrapper.querySelector(`.${configuration.customPromptElements.cancelButton}`);\n          let promptDialogInstallButton = athWrapper.querySelector(`.${configuration.customPromptElements.installButton}`);\n\n          if (promptDialogTitle && promptTarget.title) {\n            promptDialogTitle.innerText = promptTarget.title;\n          }\n\n          if (promptDialogLogo) {\n            if (promptTarget.src) {\n              promptDialogLogo.src = promptTarget.src;\n              promptDialogLogo.alt = promptTarget.title || 'Install application';\n            } else {\n              promptDialogLogo.remove();\n            }\n          }\n\n          if (promptDialogInstallButton) {\n            promptDialogInstallButton.addEventListener('click', handleInstall);\n            promptDialogInstallButton.classList.remove(configuration.hideClass);\n            promptDialogInstallButton.innerText = promptTarget.installMsg != null ? promptTarget.installMsg : promptTarget.action && promptTarget.action.ok ? promptTarget.action.ok : '';\n          }\n\n          if (promptDialogCancelButton) {\n            promptDialogCancelButton.addEventListener('click', cancelPrompt);\n            promptDialogCancelButton.classList.remove(configuration.hideClass);\n            promptDialogCancelButton.innerText = promptTarget.cancelMsg != null ? promptTarget.cancelMsg : promptTarget.action && promptTarget.action.cancel ? promptTarget.action.cancel : '';\n          }\n        }\n\n        if (configuration.lifespan && configuration.lifespan > 0) {\n          autoHideTimer = setTimeout(autoHide, configuration.lifespan * 1000);\n        }\n      } // fire the custom onShow event\n\n\n      if (configuration.onShow) {\n        configuration.onShow.call(this);\n      } // increment the display count\n\n\n      session.lastDisplayTime = Date.now();\n      session.displayCount++;\n      updateSession();\n    }\n  }\n\n  function canPrompt() {\n    if (canPromptState !== undefined) {\n      // already evaluated the situation, so don't do it again\n      doLog('canPrompt() already evaluated: ' + canPromptState.toString());\n      return canPromptState;\n    }\n\n    canPromptState = false;\n\n    if (configuration.customCriteria !== null) {\n      let passCustom = typeof configuration.customCriteria === 'function' ? configuration.customCriteria() : !!configuration.customCriteria;\n\n      if (!passCustom) {\n        doLog('not displaying call-out because a custom criteria was not met.');\n        return false;\n      }\n    } // using a double negative here to detect if service workers are not supported\n    // if not then don't bother asking to add to install the PWA\n\n\n    if (!('serviceWorker' in navigator)) {\n      doLog('not displaying call-out because service workers are not supported');\n      return false;\n    } // the device is not supported\n\n\n    if (!platform.isCompatible) {\n      doLog('not displaying call-out because device not supported');\n      doLog('platform: ' + JSON.stringify(platform));\n      return false;\n    }\n\n    let now = Date.now();\n    let lastDisplayTime = session.lastDisplayTime; // we obey the display pace (prevent the message to popup too often)\n\n    if (now - lastDisplayTime < configuration.displayPace * 60000) {\n      doLog('not displaying call-out because displayed recently');\n      return false;\n    } // obey the maximum number of display count\n\n\n    if (configuration.maxDisplayCount && session.displayCount >= configuration.maxDisplayCount) {\n      doLog('not displaying call-out because displayed too many times already');\n      return false;\n    } // check if this is a valid location\n    // TODO: should include at least the home page here\n    // by default all pages are valid, which can cause issues on iOS\n    // TODO: maybe trigger a redirect back to the home page for iOS\n\n\n    let isValidLocation = !configuration.validLocation.length;\n\n    for (let i = configuration.validLocation.length; i--;) {\n      if (configuration.validLocation[i].test(document.location.href)) {\n        isValidLocation = true;\n        break;\n      }\n    }\n\n    if (!isValidLocation) {\n      doLog('not displaying call-out because not a valid location');\n      return false;\n    }\n\n    let isGuidanceURL = false;\n\n    for (let i = guidanceTargetUrls.length; i--;) {\n      if (document.location.href.indexOf(guidanceTargetUrls[i]) > -1) {\n        isGuidanceURL = true;\n        break;\n      }\n    }\n\n    if (isGuidanceURL) {\n      doLog('not displaying call-out because this is a guidance URL');\n      return false;\n    }\n\n    if (session.pageViews < configuration.minPageViews) {\n      doLog('not displaying call-out because not enough visits');\n      return false;\n    } // critical errors:\n\n\n    if (session.optedOut) {\n      doLog('not displaying call-out because user opted out');\n      return false;\n    }\n\n    if (session.added) {\n      doLog('not displaying call-out because already added to the home screen');\n      return false;\n    } // check if the app is in stand alone mode\n    // this applies to iOS\n\n\n    if (platform.isStandalone) {\n      // execute the onAdd event if we haven't already\n      if (!session.added) {\n        session.added = true;\n        updateSession();\n\n        if (configuration.onAdd) {\n          configuration.onAdd.call(this);\n        }\n      }\n\n      doLog('not displaying call-out because in standalone mode');\n      return false;\n    } // check if this is a returning visitor\n\n\n    if (!session.returningVisitor) {\n      session.returningVisitor = true;\n      updateSession(); // we do not show the message if this is your first visit\n\n      if (configuration.skipFirstVisit) {\n        doLog('not displaying call-out because skipping first visit');\n        return false;\n      }\n    }\n\n    canPromptState = true;\n    return true;\n  }\n  /* displays native A2HS prompt & stores results */\n\n\n  function triggerNativePrompt() {\n    return beforeInstallPromptEvent.prompt().then(function () {\n      // Wait for the user to respond to the prompt\n      return beforeInstallPromptEvent.userChoice;\n    }).then(function (choiceResult) {\n      session.added = choiceResult.outcome === 'accepted';\n\n      if (session.added) {\n        doLog('user accepted the A2HS prompt');\n\n        if (configuration.onAdd) {\n          configuration.onAdd();\n        }\n      } else {\n        if (configuration.onCancel) {\n          configuration.onCancel();\n        }\n\n        session.optedOut = true;\n        doLog('user dismissed the A2HS prompt');\n      }\n\n      updateSession();\n      beforeInstallPromptEvent = null;\n    }).catch(function (err) {\n      doLog(err.message);\n\n      if (err.message.indexOf('user gesture') > -1) {\n        configuration.mustShowCustomPrompt = true;\n        delayedShow();\n      } else if (err.message.indexOf('The app is already installed') > -1) {\n        doLog(err.message);\n        session.added = true;\n        updateSession();\n      } else {\n        doLog(err);\n        return err;\n      }\n    });\n  }\n\n  function cancelPrompt(event) {\n    event.preventDefault();\n\n    if (configuration.onCancel) {\n      configuration.onCancel();\n    }\n\n    closePrompt();\n    return false;\n  }\n\n  function closePrompt() {\n    let athWrapper = document.querySelector(`.${configuration.customPromptElements.container}`);\n\n    if (athWrapper) {\n      let target = getPlatform();\n      let promptTarget = configuration.customPromptPlatformDependencies[target];\n      promptTarget.showClasses = promptTarget.showClasses.concat(configuration.showClasses);\n      athWrapper.classList.remove(...promptTarget.showClasses);\n    }\n  }\n\n  function handleInstall() {\n    if (configuration.onInstall) {\n      configuration.onInstall();\n    }\n\n    if (beforeInstallPromptEvent && (!configuration.debug || getPlatform() === 'native')) {\n      closePrompt();\n      triggerNativePrompt();\n    } else {\n      showPlatformGuidance(true);\n    }\n\n    return false;\n  }\n\n  function autoHide() {\n    let athWrapper = document.querySelector(`.${configuration.customPromptElements.container}`);\n    closePrompt();\n\n    if (athWrapper) {\n      athWrapper.classList.add(configuration.hideClass);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.container} ${configuration.customPromptElements.containerAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.banner} ${configuration.customPromptElements.bannerAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.logoCell} ${configuration.customPromptElements.logoCellAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Application Logo\",\n    className: `${configuration.customPromptElements.logo} ${configuration.customPromptElements.logoAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.titleCell} ${configuration.customPromptElements.titleCellAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.title} ${configuration.customPromptElements.titleAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.cancelButtonCell} ${configuration.customPromptElements.cancelButtonCellAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `${configuration.customPromptElements.cancelButton} ${configuration.customPromptElements.cancelButtonAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 13\n    }\n  }, \"Not Now\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.installButtonCell} ${configuration.customPromptElements.installButtonCellAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `${configuration.customPromptElements.installButton} ${configuration.customPromptElements.installButtonAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 13\n    }\n  }, \"Install\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.guidance} ${configuration.customPromptElements.guidanceAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.guidanceImageCell} ${configuration.customPromptElements.guidanceImageCellAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${configuration.customPromptElements.cancelButtonCell} ${configuration.customPromptElements.cancelButtonCellAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `${configuration.customPromptElements.guidanceCancelButton} ${configuration.customPromptElements.guidanceCancelButtonAddOns}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 13\n    }\n  }, \"Close\"))));\n}\nconst platformPropType = PropTypes.shape({\n  showClasses: PropTypes.arrayOf(PropTypes.string),\n  targetUrl: PropTypes.string,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    alt: PropTypes.string\n  })),\n  action: PropTypes.shape({\n    ok: PropTypes.string,\n    cancel: PropTypes.string,\n    guidanceCancel: PropTypes.string\n  })\n});\nAddToHomeScreen.propTypes = {\n  appId: PropTypes.string,\n  debug: PropTypes.string,\n  activateLogging: PropTypes.bool,\n  startAutomatically: PropTypes.bool,\n  skipFirstVisit: PropTypes.bool,\n  minPageViews: PropTypes.number,\n  startDelay: PropTypes.number,\n  lifespan: PropTypes.number,\n  displayPace: PropTypes.number,\n  mustShowCustomPrompt: PropTypes.bool,\n  maxDisplayCount: PropTypes.number,\n  validLocation: PropTypes.arrayOf(PropTypes.string),\n  onInit: PropTypes.func,\n  onShow: PropTypes.func,\n  onAdd: PropTypes.func,\n  onInstall: PropTypes.func,\n  onCancel: PropTypes.func,\n  showClasses: PropTypes.arrayOf(PropTypes.string),\n  showClass: PropTypes.string,\n  hideClass: PropTypes.string,\n  customCriteria: PropTypes.func,\n  customPromptContent: PropTypes.shape({\n    title: PropTypes.string,\n    src: PropTypes.string,\n    cancelMsg: PropTypes.string,\n    installMsg: PropTypes.string,\n    guidanceCancelMsg: PropTypes.string\n  }),\n  customPromptElements: PropTypes.shape({\n    container: PropTypes.string,\n    containerAddOns: PropTypes.string,\n    banner: PropTypes.string,\n    bannerAddOns: PropTypes.string,\n    logoCell: PropTypes.string,\n    logoCellAddOns: PropTypes.string,\n    logo: PropTypes.string,\n    logoAddOns: PropTypes.string,\n    titleCell: PropTypes.string,\n    titleCellAddOns: PropTypes.string,\n    title: PropTypes.string,\n    titleAddOns: PropTypes.string,\n    cancelButtonCell: PropTypes.string,\n    cancelButtonCellAddOns: PropTypes.string,\n    cancelButton: PropTypes.string,\n    cancelButtonAddOns: PropTypes.string,\n    installButtonCell: PropTypes.string,\n    installButtonCellAddOns: PropTypes.string,\n    installButton: PropTypes.string,\n    installButtonAddOns: PropTypes.string,\n    guidance: PropTypes.string,\n    guidanceAddOns: PropTypes.string,\n    guidanceImageCell: PropTypes.string,\n    guidanceImageCellAddOns: PropTypes.string,\n    guidanceCancelButton: PropTypes.string,\n    guidanceCancelButtonAddOns: PropTypes.string\n  }),\n  customPromptPlatformDependencies: PropTypes.shape({\n    native: platformPropType,\n    chromium: platformPropType,\n    edge: platformPropType,\n    iphone: platformPropType,\n    ipad: platformPropType,\n    firefox: platformPropType,\n    samsung: platformPropType,\n    opera: platformPropType\n  })\n};","map":{"version":3,"sources":["/Users/tunny2406/Documents/VST/src/addto/AddToHomeScreen.js"],"names":["PropTypes","React","useEffect","DEFAULT_CONFIGURATION","AddToHomeScreen","props","DEFAULT_PROMPT","title","cancelMsg","installMsg","guidanceCancelMsg","src","DEFAULT_SESSION","lastDisplayTime","returningVisitor","displayCount","optedOut","added","pageViews","configuration","buildConfiguration","doLog","JSON","stringify","session","platform","guidanceTargetUrls","isAthDialogShown","showNativePrompt","canPromptState","beforeInstallPromptEvent","autoHideTimer","initialize","window","addEventListener","handleBeforeInstallPrompt","evt","updateSession","onInstall","call","checkPlatform","sessionString","localStorage","getItem","appId","parse","navigator","manifestElement","document","querySelector","isCompatible","setTimeout","serviceWorker","getRegistration","then","afterServiceWorkerCheck","buildGuidanceURLs","customPromptPlatformDependencies","options","Object","assign","customPromptContent","customPromptElements","key","hasOwnProperty","prompts","target","targetUrl","push","showPlatformGuidance","skipNative","getPlatform","athWrapper","container","clearTimeout","closePrompt","triggerNativePrompt","promptTarget","location","replace","images","length","promptDialogBannerBody","banner","promptDialogGuidanceBody","guidance","promptDialogGuidanceImageCell","guidanceImageCell","promptDialogGuidanceCancelButton","guidanceCancelButton","classList","add","hideClass","showClass","index","img","Image","alt","classes","appendChild","cancelPrompt","remove","innerText","action","guidanceCancel","isVisible","showClasses","hideAfter","lifespan","autoHide","element","dimensions","getBoundingClientRect","width","height","debug","activateLogging","onInit","startAutomatically","show","logString","console","log","setItem","userAgent","isIDevice","test","isSamsung","isFireFox","isOpera","isEdge","isChromium","isInWebAppiOS","standalone","isInWebAppChrome","matchMedia","matches","isMobileSafari","indexOf","isStandalone","isiPad","isiPhone","native","undefined","event","preventDefault","delayedShow","performShow","startDelay","readyState","onreadystatechange","canPrompt","mustShowCustomPrompt","concat","promptDialogTitle","promptDialogLogo","logo","promptDialogCancelButton","cancelButton","promptDialogInstallButton","installButton","handleInstall","ok","cancel","onShow","Date","now","toString","customCriteria","passCustom","displayPace","maxDisplayCount","isValidLocation","validLocation","i","href","isGuidanceURL","minPageViews","onAdd","skipFirstVisit","prompt","userChoice","choiceResult","outcome","onCancel","catch","err","message","containerAddOns","bannerAddOns","logoCell","logoCellAddOns","logoAddOns","titleCell","titleCellAddOns","titleAddOns","cancelButtonCell","cancelButtonCellAddOns","cancelButtonAddOns","installButtonCell","installButtonCellAddOns","installButtonAddOns","guidanceAddOns","guidanceImageCellAddOns","guidanceCancelButtonAddOns","platformPropType","shape","arrayOf","string","propTypes","bool","number","func","chromium","edge","iphone","ipad","firefox","samsung","opera"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\n\nimport './addToHomeScreen.scss';\nimport DEFAULT_CONFIGURATION from './addToHomeScreenConfiguration.json';\n\nexport default function AddToHomeScreen(props) {\n\n  const DEFAULT_PROMPT = {\n    title: 'Do you want to install this application on your homescreen?',\n    cancelMsg: 'Not now',\n    installMsg: 'Install',\n    guidanceCancelMsg: 'Close',\n    src: 'images/logos/default/StoreLogo.png'\n  };\n\n  const DEFAULT_SESSION = {\n    lastDisplayTime: 0, // last time we displayed the message\n    returningVisitor: false, // is this the first time you visit\n    displayCount: 0, // number of times the message has been shown\n    optedOut: false, // has the user opted out\n    added: false, // has been actually added to the home screen\n    pageViews: 0\n  };\n\n  let configuration = buildConfiguration();\n\n  doLog(`final configuration: ${ JSON.stringify(configuration) }`);\n\n  let session = {};\n  let platform = {};\n  let guidanceTargetUrls = [];\n  let isAthDialogShown = false;\n  let showNativePrompt = false;\n\n  let canPromptState;\n  let beforeInstallPromptEvent;\n  let autoHideTimer;\n\n  useEffect(initialize, []);\n\n  function initialize() {\n    if ('onbeforeinstallprompt' in window) {\n      doLog('add beforeinstallprompt listener');\n      window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n      showNativePrompt = true;\n\n    }\n    if ('onappinstalled' in window) {\n      window.addEventListener('appinstalled', function (evt) {\n        doLog('A2HS installed');\n        session.added = true;\n        updateSession();\n        if (configuration.onInstall) {\n          configuration.onInstall.call(this);\n        }\n      });\n\n    }\n\n    checkPlatform();\n\n    let sessionString = window.localStorage.getItem(configuration.appId);\n    session = sessionString ? JSON.parse(sessionString) : DEFAULT_SESSION;\n    if (session && session.added) {\n      // there is nothing to do if app was already added to home screen\n      return;\n    }\n\n    if ('serviceWorker' in navigator) {\n      let manifestElement = document.querySelector('[rel=\\'manifest\\']');\n      if (!manifestElement) {\n        doLog('no manifest file');\n        platform.isCompatible = false;\n      }\n      setTimeout(function () {\n        // we wait 1 sec until we execute this because sometimes the browser needs a little time to register the service worker\n        navigator.serviceWorker.getRegistration().then(afterServiceWorkerCheck);\n        buildGuidanceURLs(configuration.customPromptPlatformDependencies);\n      }, 1000);\n    } else {\n      afterServiceWorkerCheck({});\n    }\n\n  }\n\n  function buildConfiguration() {\n    let options = Object.assign({}, DEFAULT_CONFIGURATION, props);\n\n    options.customPromptContent = Object.assign({}, DEFAULT_CONFIGURATION.customPromptContent, props.customPromptContent);\n    options.customPromptElements = Object.assign({}, DEFAULT_CONFIGURATION.customPromptElements, props.customPromptElements);\n    options.customPromptPlatformDependencies = Object.assign({}, DEFAULT_CONFIGURATION.customPromptPlatformDependencies, props.customPromptPlatformDependencies);\n\n    for (let key in DEFAULT_CONFIGURATION.customPromptPlatformDependencies) {\n      if (DEFAULT_CONFIGURATION.customPromptPlatformDependencies.hasOwnProperty(key)) {\n        if (props.customPromptPlatformDependencies) {\n          options.customPromptPlatformDependencies[key] = Object.assign({}, DEFAULT_CONFIGURATION.customPromptPlatformDependencies[key], props.customPromptPlatformDependencies[key]);\n        } else {\n          options.customPromptPlatformDependencies[key] = DEFAULT_CONFIGURATION.customPromptPlatformDependencies[key];\n        }\n      }\n    }\n    return options;\n  }\n\n  function buildGuidanceURLs(prompts) {\n    for (let key in prompts) {\n      if (prompts.hasOwnProperty(key)) {\n        let target = prompts[key].targetUrl;\n\n        doLog('building guidance urls: ' + key + target ? '/' + target : '');\n        if (target) {\n          guidanceTargetUrls.push(target);\n        }\n      }\n    }\n  }\n\n  // show hint images for browsers without native prompt\n  /*\n   * Currently:\n   *  iOS Safari\n   *  FireFox Android\n   *  Samsung Android\n   *  Opera Android\n   */\n  function showPlatformGuidance(skipNative) {\n    let target = getPlatform(skipNative);\n    doLog('showing platform guidance for: ' + target);\n    let athWrapper = document.querySelector(`.${ configuration.customPromptElements.container }`);\n\n    if (athWrapper) {\n      if (autoHideTimer) {\n        clearTimeout(autoHideTimer);\n      }\n\n      if (!skipNative && target === 'native' && beforeInstallPromptEvent) {\n        closePrompt();\n        triggerNativePrompt();\n      } else {\n        let promptTarget = Object.assign({}, DEFAULT_PROMPT, configuration.customPromptContent, configuration.customPromptPlatformDependencies[target]);\n\n        if (promptTarget.targetUrl) {\n          document.location.replace(promptTarget.targetUrl);\n        } else {\n          if (promptTarget.images && promptTarget.images.length > 0) {\n            let promptDialogBannerBody = athWrapper.querySelector(`.${ configuration.customPromptElements.banner }`);\n            let promptDialogGuidanceBody = athWrapper.querySelector(`.${ configuration.customPromptElements.guidance }`);\n            let promptDialogGuidanceImageCell = athWrapper.querySelector(`.${ configuration.customPromptElements.guidanceImageCell }`);\n            let promptDialogGuidanceCancelButton = athWrapper.querySelector(`.${ configuration.customPromptElements.guidanceCancelButton }`);\n\n            promptDialogBannerBody.classList.add(configuration.hideClass);\n            promptDialogGuidanceBody.classList.add(configuration.showClass);\n\n            for (let index = 0; index < promptTarget.images.length; index++) {\n              let img = new Image();\n\n              img.src = promptTarget.images[index].src;\n              img.alt = promptTarget.images[index].alt;\n\n              if (promptTarget.images[index].classes) {\n                img.classList.add(...promptTarget.images[index].classes);\n              }\n              promptDialogGuidanceImageCell.appendChild(img);\n            }\n\n            if (promptDialogGuidanceCancelButton) {\n              promptDialogGuidanceCancelButton.addEventListener('click', cancelPrompt);\n              promptDialogGuidanceCancelButton.classList.remove(configuration.hideClass);\n              promptDialogGuidanceCancelButton.innerText = promptTarget.guidanceCancelMsg != null ? promptTarget.guidanceCancelMsg :\n                  ((promptTarget.action && promptTarget.action.guidanceCancel) ? promptTarget.action.guidanceCancel : '');\n            }\n          }\n          if (!isVisible(athWrapper)) {\n            athWrapper.classList.add(...promptTarget.showClasses);\n            athWrapper.classList.remove(configuration.hideClass);\n          }\n\n          let hideAfter = (configuration.lifespan >= 10) ? configuration.lifespan : 10;\n\n          autoHideTimer = setTimeout(autoHide, hideAfter * 1000);\n        }\n      }\n    }\n  }\n\n  function isVisible(element) {\n    let dimensions = element.getBoundingClientRect();\n    return dimensions.width !== 0 && dimensions.height !== 0;\n  }\n\n  function afterServiceWorkerCheck(serviceWorker) {\n    if (!serviceWorker) {\n      doLog('no service worker');\n      platform.isCompatible = false;\n    }\n    doLog('service worker found - increasing page views');\n\n    session.pageViews += 1;\n    updateSession();\n\n    // override defaults that are dependent on each other\n    if (configuration && configuration.debug && (typeof configuration.activateLogging === 'undefined')) {\n      configuration.activateLogging = true;\n    }\n\n    // setup the debug environment\n    if (configuration.debug) {\n      platform.isCompatible = true;\n    }\n\n    if (configuration.onInit) {\n      configuration.onInit.call(this);\n    }\n\n    doLog('decide to show: autoStart: ' + configuration.startAutomatically + ' ### beforeInstallPromptEvent: ' + beforeInstallPromptEvent + ' ### showNativePrompt: ' + showNativePrompt);\n    if (configuration.startAutomatically && !!beforeInstallPromptEvent) {\n      doLog('autoStart - displaying call-out');\n      show();\n    } else if (!showNativePrompt) {\n      doLog('not showing native prompt - displaying call-out');\n      show();\n    } else {\n      doLog('did decide to show nothing');\n    }\n\n  }\n\n  function doLog(logString) {\n    if (configuration.activateLogging) {\n      console.log('Add to Homescreen: ' + logString);\n    }\n  }\n\n  function updateSession() {\n    window.localStorage.setItem(configuration.appId, JSON.stringify(session));\n  }\n\n  function checkPlatform() {\n    // browser info and capability\n    let userAgent = window.navigator.userAgent;\n    doLog('checking platform - found user agent: ' + userAgent);\n\n    platform.isIDevice = (/iphone|ipod|ipad/i).test(userAgent);\n    platform.isSamsung = /Samsung/i.test(userAgent);\n    platform.isFireFox = /Firefox/i.test(userAgent);\n    platform.isOpera = /opr/i.test(userAgent);\n    platform.isEdge = /edg/i.test(userAgent);\n\n    // Opera & FireFox only Trigger on Android\n    if (platform.isFireFox) {\n      platform.isFireFox = /android/i.test(userAgent);\n    }\n\n    if (platform.isOpera) {\n      platform.isOpera = /android/i.test(userAgent);\n    }\n\n    platform.isChromium = ('onbeforeinstallprompt' in window);\n    platform.isInWebAppiOS = (window.navigator.standalone === true);\n    platform.isInWebAppChrome = (window.matchMedia('(display-mode: standalone)').matches);\n    platform.isMobileSafari = platform.isIDevice && userAgent.indexOf('Safari') > -1 && userAgent.indexOf('CriOS') < 0;\n    platform.isStandalone = platform.isInWebAppiOS || platform.isInWebAppChrome;\n    platform.isiPad = (platform.isMobileSafari && userAgent.indexOf('iPad') > -1);\n    platform.isiPhone = (platform.isMobileSafari && userAgent.indexOf('iPad') === -1);\n    platform.isCompatible = (platform.isChromium || platform.isMobileSafari ||\n        platform.isSamsung || platform.isFireFox || platform.isOpera);\n  }\n\n  function getPlatform(native) {\n    if (configuration.debug && typeof configuration.debug === 'string') {\n      return configuration.debug;\n    }\n\n    if (platform.isChromium && native === undefined) {\n      return 'native';\n    } else if (platform.isFireFox) {\n      return 'firefox';\n    } else if (platform.isiPad) {\n      return 'ipad';\n    } else if (platform.isiPhone) {\n      return 'iphone';\n    } else if (platform.isOpera) {\n      return 'opera';\n    } else if (platform.isSamsung) {\n      return 'samsung';\n    } else if (platform.isEdge) {\n      return 'edge';\n    } else if (platform.isChromium) {\n      return 'chromium';\n    } else {\n      return '';\n    }\n  }\n\n  function handleBeforeInstallPrompt(event) {\n    event.preventDefault();\n    doLog('capturing the native A2HS prompt');\n    beforeInstallPromptEvent = event;\n    delayedShow();\n  }\n\n  function delayedShow() {\n    setTimeout(performShow, configuration.startDelay * 1000 + 500);\n  }\n\n  function show() {\n    // message already on screen\n    if (isAthDialogShown) {\n      doLog('not displaying call-out because already shown on screen');\n      return;\n    }\n\n    isAthDialogShown = true;\n\n    if (document.readyState === 'interactive' || document.readyState === 'complete') {\n      delayedShow();\n    } else {\n      document.onreadystatechange = function () {\n        if (document.readyState === 'complete') {\n          delayedShow();\n        }\n      };\n    }\n  }\n\n  function performShow() {\n    if (canPrompt()) {\n      if (beforeInstallPromptEvent && !configuration.mustShowCustomPrompt) {\n        doLog('show native prompt');\n        triggerNativePrompt();\n      } else {\n        let target = getPlatform();\n        let athWrapper = document.querySelector(`.${ configuration.customPromptElements.container }`);\n\n        doLog(`show generic prompt for platform ${ target }`);\n        if (athWrapper && !session.optedOut) {\n          athWrapper.classList.remove(configuration.hideClass);\n\n          let promptTarget = Object.assign({}, DEFAULT_PROMPT, configuration.customPromptContent, configuration.customPromptPlatformDependencies[target]);\n\n          if (promptTarget.showClasses) {\n            promptTarget.showClasses = promptTarget.showClasses.concat(configuration.showClasses);\n          } else {\n            promptTarget.showClasses = configuration.showClasses;\n          }\n\n          for (let index = 0; index < promptTarget.showClasses.length; index++) {\n            athWrapper.classList.add(promptTarget.showClasses[index]);\n          }\n\n          let promptDialogTitle = athWrapper.querySelector(`.${ configuration.customPromptElements.title }`);\n          let promptDialogLogo = athWrapper.querySelector(`.${ configuration.customPromptElements.logo }`);\n          let promptDialogCancelButton = athWrapper.querySelector(`.${ configuration.customPromptElements.cancelButton }`);\n          let promptDialogInstallButton = athWrapper.querySelector(`.${ configuration.customPromptElements.installButton }`);\n\n          if (promptDialogTitle && promptTarget.title) {\n            promptDialogTitle.innerText = promptTarget.title;\n          }\n\n          if (promptDialogLogo) {\n            if (promptTarget.src) {\n              promptDialogLogo.src = promptTarget.src;\n              promptDialogLogo.alt = promptTarget.title || 'Install application';\n            } else {\n              promptDialogLogo.remove();\n            }\n          }\n\n          if (promptDialogInstallButton) {\n            promptDialogInstallButton.addEventListener('click', handleInstall);\n            promptDialogInstallButton.classList.remove(configuration.hideClass);\n            promptDialogInstallButton.innerText = promptTarget.installMsg != null ? promptTarget.installMsg :\n                ((promptTarget.action && promptTarget.action.ok) ? promptTarget.action.ok : '');\n          }\n\n          if (promptDialogCancelButton) {\n            promptDialogCancelButton.addEventListener('click', cancelPrompt);\n            promptDialogCancelButton.classList.remove(configuration.hideClass);\n            promptDialogCancelButton.innerText = promptTarget.cancelMsg != null ? promptTarget.cancelMsg :\n                ((promptTarget.action && promptTarget.action.cancel) ? promptTarget.action.cancel : '');\n          }\n        }\n\n        if (configuration.lifespan && configuration.lifespan > 0) {\n          autoHideTimer = setTimeout(autoHide, configuration.lifespan * 1000);\n        }\n      }\n\n      // fire the custom onShow event\n      if (configuration.onShow) {\n        configuration.onShow.call(this);\n      }\n\n      // increment the display count\n      session.lastDisplayTime = Date.now();\n      session.displayCount++;\n      updateSession();\n    }\n\n  }\n\n  function canPrompt() {\n    if (canPromptState !== undefined) {\n      // already evaluated the situation, so don't do it again\n      doLog('canPrompt() already evaluated: ' + canPromptState.toString());\n      return canPromptState;\n    }\n\n    canPromptState = false;\n\n    if (configuration.customCriteria !== null) {\n      let passCustom = typeof configuration.customCriteria === 'function' ? configuration.customCriteria() : !!configuration.customCriteria;\n\n      if (!passCustom) {\n        doLog('not displaying call-out because a custom criteria was not met.');\n        return false;\n      }\n    }\n\n    // using a double negative here to detect if service workers are not supported\n    // if not then don't bother asking to add to install the PWA\n    if (!('serviceWorker' in navigator)) {\n      doLog('not displaying call-out because service workers are not supported');\n      return false;\n    }\n\n    // the device is not supported\n    if (!platform.isCompatible) {\n      doLog('not displaying call-out because device not supported');\n      doLog('platform: ' + JSON.stringify(platform));\n      return false;\n    }\n\n    let now = Date.now();\n    let lastDisplayTime = session.lastDisplayTime;\n\n    // we obey the display pace (prevent the message to popup too often)\n    if (now - lastDisplayTime < configuration.displayPace * 60000) {\n      doLog('not displaying call-out because displayed recently');\n      return false;\n    }\n\n    // obey the maximum number of display count\n    if (configuration.maxDisplayCount && session.displayCount >= configuration.maxDisplayCount) {\n      doLog('not displaying call-out because displayed too many times already');\n      return false;\n    }\n\n    // check if this is a valid location\n    // TODO: should include at least the home page here\n    // by default all pages are valid, which can cause issues on iOS\n    // TODO: maybe trigger a redirect back to the home page for iOS\n    let isValidLocation = !configuration.validLocation.length;\n\n    for (let i = configuration.validLocation.length; i--;) {\n      if (configuration.validLocation[i].test(document.location.href)) {\n        isValidLocation = true;\n        break;\n      }\n    }\n\n    if (!isValidLocation) {\n      doLog('not displaying call-out because not a valid location');\n      return false;\n    }\n\n    let isGuidanceURL = false;\n\n    for (let i = guidanceTargetUrls.length; i--;) {\n      if (document.location.href.indexOf(guidanceTargetUrls[i]) > -1) {\n        isGuidanceURL = true;\n        break;\n      }\n    }\n\n    if (isGuidanceURL) {\n      doLog('not displaying call-out because this is a guidance URL');\n      return false;\n    }\n\n    if (session.pageViews < configuration.minPageViews) {\n      doLog('not displaying call-out because not enough visits');\n      return false;\n    }\n\n    // critical errors:\n    if (session.optedOut) {\n      doLog('not displaying call-out because user opted out');\n      return false;\n    }\n\n    if (session.added) {\n      doLog('not displaying call-out because already added to the home screen');\n      return false;\n    }\n\n    // check if the app is in stand alone mode\n    // this applies to iOS\n    if (platform.isStandalone) {\n\n      // execute the onAdd event if we haven't already\n      if (!session.added) {\n        session.added = true;\n        updateSession();\n\n        if (configuration.onAdd) {\n          configuration.onAdd.call(this);\n        }\n      }\n\n      doLog('not displaying call-out because in standalone mode');\n      return false;\n    }\n\n    // check if this is a returning visitor\n    if (!session.returningVisitor) {\n      session.returningVisitor = true;\n      updateSession();\n\n      // we do not show the message if this is your first visit\n      if (configuration.skipFirstVisit) {\n        doLog('not displaying call-out because skipping first visit');\n        return false;\n      }\n    }\n\n    canPromptState = true;\n    return true;\n  }\n\n  /* displays native A2HS prompt & stores results */\n  function triggerNativePrompt() {\n    return beforeInstallPromptEvent.prompt()\n        .then(function () {\n          // Wait for the user to respond to the prompt\n          return beforeInstallPromptEvent.userChoice;\n        })\n        .then(function (choiceResult) {\n          session.added = (choiceResult.outcome === 'accepted');\n\n          if (session.added) {\n            doLog('user accepted the A2HS prompt');\n            if (configuration.onAdd) {\n              configuration.onAdd();\n            }\n          } else {\n            if (configuration.onCancel) {\n              configuration.onCancel();\n            }\n            session.optedOut = true;\n            doLog('user dismissed the A2HS prompt');\n          }\n          updateSession();\n          beforeInstallPromptEvent = null;\n\n        })\n        .catch(function (err) {\n          doLog(err.message);\n\n          if (err.message.indexOf('user gesture') > -1) {\n            configuration.mustShowCustomPrompt = true;\n            delayedShow();\n          } else if (err.message.indexOf('The app is already installed') > -1) {\n            doLog(err.message);\n            session.added = true;\n            updateSession();\n          } else {\n            doLog(err);\n            return err;\n          }\n        });\n  }\n\n  function cancelPrompt(event) {\n    event.preventDefault();\n    if (configuration.onCancel) {\n      configuration.onCancel();\n    }\n    closePrompt();\n    return false;\n  }\n\n  function closePrompt() {\n    let athWrapper = document.querySelector(`.${ configuration.customPromptElements.container }`);\n    if (athWrapper) {\n      let target = getPlatform();\n      let promptTarget = configuration.customPromptPlatformDependencies[target];\n      promptTarget.showClasses = promptTarget.showClasses.concat(configuration.showClasses);\n      athWrapper.classList.remove(...promptTarget.showClasses);\n    }\n  }\n\n  function handleInstall() {\n    if (configuration.onInstall) {\n      configuration.onInstall();\n    }\n    if (beforeInstallPromptEvent && (!configuration.debug || getPlatform() === 'native')) {\n      closePrompt();\n      triggerNativePrompt();\n    } else {\n      showPlatformGuidance(true);\n    }\n    return false;\n  }\n\n  function autoHide() {\n    let athWrapper = document.querySelector(`.${ configuration.customPromptElements.container }`);\n\n    closePrompt();\n    if (athWrapper) {\n      athWrapper.classList.add(configuration.hideClass);\n    }\n  }\n\n  return (\n      <div className={ `${ configuration.customPromptElements.container } ${ configuration.customPromptElements.containerAddOns }` }>\n        <div className={ `${ configuration.customPromptElements.banner } ${ configuration.customPromptElements.bannerAddOns }` }>\n          <div className={ `${ configuration.customPromptElements.logoCell } ${ configuration.customPromptElements.logoCellAddOns }` }>\n            <img alt=\"Application Logo\" className={ `${ configuration.customPromptElements.logo } ${ configuration.customPromptElements.logoAddOns }` }/>\n          </div>\n          <div className={ `${ configuration.customPromptElements.titleCell } ${ configuration.customPromptElements.titleCellAddOns }` }>\n            <div className={ `${ configuration.customPromptElements.title } ${ configuration.customPromptElements.titleAddOns }` }/>\n          </div>\n          <div className={ `${ configuration.customPromptElements.cancelButtonCell } ${ configuration.customPromptElements.cancelButtonCellAddOns }` }>\n            <button className={ `${ configuration.customPromptElements.cancelButton } ${ configuration.customPromptElements.cancelButtonAddOns }` }>Not Now</button>\n          </div>\n          <div className={ `${ configuration.customPromptElements.installButtonCell } ${ configuration.customPromptElements.installButtonCellAddOns }` }>\n            <button className={ `${ configuration.customPromptElements.installButton } ${ configuration.customPromptElements.installButtonAddOns }` }>Install</button>\n          </div>\n        </div>\n        <div className={ `${ configuration.customPromptElements.guidance } ${ configuration.customPromptElements.guidanceAddOns }` }>\n          <div className={ `${ configuration.customPromptElements.guidanceImageCell } ${ configuration.customPromptElements.guidanceImageCellAddOns }` }/>\n          <div className={ `${ configuration.customPromptElements.cancelButtonCell } ${ configuration.customPromptElements.cancelButtonCellAddOns }` }>\n            <button className={ `${ configuration.customPromptElements.guidanceCancelButton } ${ configuration.customPromptElements.guidanceCancelButtonAddOns }` }>Close</button>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nconst platformPropType = PropTypes.shape({\n  showClasses: PropTypes.arrayOf(PropTypes.string),\n  targetUrl: PropTypes.string,\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    alt: PropTypes.string\n  })),\n  action: PropTypes.shape({\n    ok: PropTypes.string,\n    cancel: PropTypes.string,\n    guidanceCancel: PropTypes.string\n  })\n});\n\nAddToHomeScreen.propTypes = {\n  appId: PropTypes.string,\n  debug: PropTypes.string,\n  activateLogging: PropTypes.bool,\n  startAutomatically: PropTypes.bool,\n  skipFirstVisit: PropTypes.bool,\n  minPageViews: PropTypes.number,\n  startDelay: PropTypes.number,\n  lifespan: PropTypes.number,\n  displayPace: PropTypes.number,\n  mustShowCustomPrompt: PropTypes.bool,\n  maxDisplayCount: PropTypes.number,\n  validLocation: PropTypes.arrayOf(PropTypes.string),\n  onInit: PropTypes.func,\n  onShow: PropTypes.func,\n  onAdd: PropTypes.func,\n  onInstall: PropTypes.func,\n  onCancel: PropTypes.func,\n  showClasses: PropTypes.arrayOf(PropTypes.string),\n  showClass: PropTypes.string,\n  hideClass: PropTypes.string,\n  customCriteria: PropTypes.func,\n  customPromptContent: PropTypes.shape({\n    title: PropTypes.string,\n    src: PropTypes.string,\n    cancelMsg: PropTypes.string,\n    installMsg: PropTypes.string,\n    guidanceCancelMsg: PropTypes.string\n  }),\n  customPromptElements: PropTypes.shape({\n    container: PropTypes.string,\n    containerAddOns: PropTypes.string,\n    banner: PropTypes.string,\n    bannerAddOns: PropTypes.string,\n    logoCell: PropTypes.string,\n    logoCellAddOns: PropTypes.string,\n    logo: PropTypes.string,\n    logoAddOns: PropTypes.string,\n    titleCell: PropTypes.string,\n    titleCellAddOns: PropTypes.string,\n    title: PropTypes.string,\n    titleAddOns: PropTypes.string,\n    cancelButtonCell: PropTypes.string,\n    cancelButtonCellAddOns: PropTypes.string,\n    cancelButton: PropTypes.string,\n    cancelButtonAddOns: PropTypes.string,\n    installButtonCell: PropTypes.string,\n    installButtonCellAddOns: PropTypes.string,\n    installButton: PropTypes.string,\n    installButtonAddOns: PropTypes.string,\n    guidance: PropTypes.string,\n    guidanceAddOns: PropTypes.string,\n    guidanceImageCell: PropTypes.string,\n    guidanceImageCellAddOns: PropTypes.string,\n    guidanceCancelButton: PropTypes.string,\n    guidanceCancelButtonAddOns: PropTypes.string\n  }),\n  customPromptPlatformDependencies: PropTypes.shape({\n    native: platformPropType,\n    chromium: platformPropType,\n    edge: platformPropType,\n    iphone: platformPropType,\n    ipad: platformPropType,\n    firefox: platformPropType,\n    samsung: platformPropType,\n    opera: platformPropType\n  })\n};"]},"metadata":{},"sourceType":"module"}